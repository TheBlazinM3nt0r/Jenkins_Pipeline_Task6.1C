pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building the application...'
                // Specify the build tool
                echo 'Using Maven to compile and package the code'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running Unit Integration Test...'
                // Specify the testing tools
                echo 'Using JUnit for unit tests and TestNG for integration tests'
            }
            post {
                success {
                    emailext to: 'nicholaskrcevinac@gmail.com',
                        subject: "Unit and Integration Tests Success: ${currentBuild.fullDisplayName}",
                        body: "The Unit and Integration Tests stage has completed successfully.",
                        attachLog: true, compressLog: true
                }
                failure {
                    emailext to: 'nicholaskrcevinac@gmail.com',
                        subject: "Unit and Integration Tests Failure: ${currentBuild.fullDisplayName}",
                        body: "The Unit and Integration Tests stage failed. Check the attached logs for details.", 
                        attachLog: true, compressLog: true
                }
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Performing code analysis...'
                // Specify code analysis tool
                echo 'Using SonarQube for code quality'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Performing security scan...'
                // Specify the security scanning tool
                echo 'Using OWASP Dependency-Check as the tool for vulnerability check'
            }
            post {
                success {
                    emailext to: 'nicholaskrcevinac@gmail.com',
                        subject: "Security Scan Success: ${currentBuild.fullDisplayName}",
                        body: "The Security Scan stage was successful.",
                        attachLog: true, compressLog: true
                }
                failure {
                    emailext to: 'nicholaskrcevinac@gmail.com',
                        subject: "Security Scan Failure: ${currentBuild.fullDisplayName}",
                        body: "The Security Scan stage failed. Check the attached logs for details.",
                        attachLog: true, compressLog: true
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying the application to the staging environment...'
                // Specify the deployment server or tool
                echo 'Deploying to Azure VM instance'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running Integration Testing on Staging Environment...'
                // Specify the integration testing tool
                echo 'Using Cypress to perform end-to-end testing'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying the Application to production...'
                // Specify the deployment server or tool
                echo 'Deploying to Azure VM instance'
            }
        }
    }
    
    post {
        always {
            echo 'Final Email Notification'
            emailext to: 'nicholaskrcevinac@gmail.com',
                subject: "Pipeline Finished: ${currentBuild.fullDisplayName}",
                body: "Check console ouput: ${env.BUILD_URL}"
        }
    }
}
